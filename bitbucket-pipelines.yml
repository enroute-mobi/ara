definitions:
  services:
    postgres:
      image:
        name: us.gcr.io/enroute-interne/enroute-postgresql:dev
        username: _json_key
        password: "$GCLOUD_API_KEYFILE"
      environment:
        POSTGRES_DB: ara
        POSTGRES_USER: ara
        POSTGRES_PASSWORD: ara
  steps:
    - step: &static-check
        name: Static Check
        image:
          name: us.gcr.io/enroute-interne/enroute-golang:dev
          username: _json_key
          password: "$GCLOUD_API_KEYFILE"
        script:
          - eval "$(build.sh bitbucket::env)"
          - build.sh golang::dependencies
          - staticcheck ./...

    - step: &build
        name: Build
        image:
          name: us.gcr.io/enroute-interne/enroute-golang:dev
          username: _json_key
          password: "$GCLOUD_API_KEYFILE"
        script:
          - eval "$(build.sh bitbucket::env)"
          - build.sh golang::dependencies
          - make build

    - step: &unit-tests
        name: Unit tests
        image:
          name: us.gcr.io/enroute-interne/enroute-golang:dev
          username: _json_key
          password: "$GCLOUD_API_KEYFILE"
        script:
          - eval "$(build.sh bitbucket::env)"
          - build.sh golang::dependencies
          - build.sh bitbucket::database
          - make test_migrations
          - make tests
        services:
          - postgres

    - step: &cucumber
        name: Cucumber Tests
        image:
          name: us.gcr.io/enroute-interne/enroute-ruby:3.3-dev
          username: _json_key
          password: "$GCLOUD_API_KEYFILE"
        script:
          - echo "TODO"

pipelines:
  default:
    - parallel:
        steps:
          - step: *static-check
          - step: *unit-tests
          - step: *build
    - step: *cucumber

  branches:
    master:
      - parallel:
          steps:
            - step: *static-check
            - step: *unit-tests
            - step: *build
      - parallel:
          steps:
            - step: *cucumber
            - step:
                name: Build Docker
                image:
                  name: us.gcr.io/enroute-interne/enroute-cloud-sdk:latest
                  username: _json_key
                  password: "$GCLOUD_API_KEYFILE"
                  caches:
                    - docker
                  services:
                    - docker
                  script:
                    - build.sh gcloud::setup
                    - build.sh bitbucket::docker::build

      - step:
          name: Deploy to test
          image:
              name: eu.gcr.io/enroute-interne/enroute-cloud-sdk:latest
              username: _json_key
              password: "$GCLOUD_API_KEYFILE"
          deployment: test
          runs-on:
            - self.hosted
            - env.interne
            - deploy
          script:
            - git clone git@bitbucket.org:enroute-mobi/ara-env.git env
            - env/deploy-with-runner.sh
            - pipe: atlassian/datadog-send-event:2.3.1
              variables:
                API_KEY: $DATADOG_KEY
                TITLE: "Build ${BITBUCKET_BUILD_NUMBER} deployed on ara ${BITBUCKET_DEPLOYMENT_ENVIRONMENT}"
                PAYLOAD: >
                  { "source_type_name": "BITBUCKET", "tags":["env:test","app:ara","repository:ara"] }

      - step:
          name: Deploy to staging
          image:
              name: eu.gcr.io/enroute-interne/enroute-cloud-sdk:latest
              username: _json_key
              password: "$GCLOUD_API_KEYFILE"
          deployment: staging
          trigger: manual
          runs-on:
            - self.hosted
            - env.interne
            - deploy
          script:
            - git clone git@bitbucket.org:enroute-mobi/ara-env.git env
            - env/deploy-with-runner.sh
            - pipe: atlassian/datadog-send-event:2.3.1
              variables:
                API_KEY: $DATADOG_KEY
                TITLE: "Build ${BITBUCKET_BUILD_NUMBER} deployed on ara ${BITBUCKET_DEPLOYMENT_ENVIRONMENT}"
                PAYLOAD: >
                  { "source_type_name": "BITBUCKET", "tags":["env:staging","app:ara","repository:ara"] }

      - step:
          name: Deploy to production
          image:
              name: eu.gcr.io/enroute-interne/enroute-cloud-sdk:latest
              username: _json_key
              password: "$GCLOUD_API_KEYFILE"
          deployment: production
          trigger: manual
          runs-on:
            - self.hosted
            - env.production
            - deploy
          script:
            - git clone git@bitbucket.org:enroute-mobi/ara-env.git env
            - env/deploy-with-runner.sh
            - pipe: atlassian/datadog-send-event:2.3.1
              variables:
                API_KEY: $DATADOG_KEY
                TITLE: "Build ${BITBUCKET_BUILD_NUMBER} deployed on ara ${BITBUCKET_DEPLOYMENT_ENVIRONMENT}"
                PAYLOAD: >
                  { "source_type_name": "BITBUCKET", "tags":["env:production","app:ara","repository:ara"] }
